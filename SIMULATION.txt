EXP7:
set ns [new Simulator]
# Define different colors
# for data flows (for NAM)
$ns color 1 Blue
$ns color 2 Red
# Open the NAM trace file
set namfile [open out.nam w]
set tracefile [open out.tr w]
$ns namtrace-all $namfile
# Define a 'finish' procedure
proc finish {} {
global ns tracefile namfile
$ns flush-trace
# Close the NAM trace file 
close $tracefile
close $namfile
# Execute NAM on the trace file
exec nam out.nam &
exit 0
}
# Create four nodes
set n0 [$ns node] 
set n1 [$ns node] 
set n2 [$ns node] 
set n3 [$ns node]
# Create links between the nodes
$ns duplex-link $n0 $n2 2Mb 10ms DropTail
$ns duplex-link $n1 $n2 2Mb 10ms DropTail
$ns duplex-link $n2 $n3 1.7Mb 20ms DropTail
# Set Queue Size of link (n2-n3) to 10
$ns queue-limit $n2 $n3 10
# Give node position (for NAM)
$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n2 orient right-up
$ns duplex-link-op $n2 $n3 orient right
# Monitor the queue for link (n2-n3). (for NAM)
$ns duplex-link-op $n2 $n3 queuePos 0.5
# Setup a TCP connection
set tcp [new Agent/TCP]
$tcp set class_ 2
$ns attach-agent $n0 $tcp
set sink [new Agent/TCPSink]
$ns attach-agent $n3 $sink
$ns connect $tcp $sink
$tcp set fid_ 1
# Setup a FTP over TCP connection
set ftp [new Application/FTP]
$ftp attach-agent $tcp
$ftp set type_ FTP
# Setup a UDP connection
set udp [new Agent/UDP]
$ns attach-agent $n1 $udp 
set null [new Agent/Null]
$ns attach-agent $n3 $null
$ns connect $udp $null
$udp set fid_ 2
# Setup a CBR over UDP connection 
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp
$cbr set type_ CBR
$cbr set packet_size_ 1000
$cbr set rate_ 1Mb
$cbr set random_ false
# Schedule events for the CBR and FTP agents
$ns at 0.1 "$cbr start"
$ns at 1.0 "$ftp start"
$ns at 4.0 "$ftp stop"
$ns at 4.5 "$cbr stop"
# Detach tcp and sink agents# (not really necessary)
$ns at 4.5 "$ns detach-agent $n0 $tcp ; $ns detach-agent $n3 $sink"
# Call the finish procedure after# 5 seconds of simulation time
$ns at 5.0 "finish"
# Print CBR packet size and interval
puts "CBR packet size = [$cbr set packet_size_]"
puts "CBR interval = [$cbr set interval_]"
# Run the simulation
$ns run




EXP9A:
# Simple and Neat TCP & UDP Simulation
set ns [new Simulator]

# Output files
set nf [open out.nam w]
set tr [open out.tr w]
$ns namtrace-all $nf
$ns trace-all $tr

# Finish procedure
proc finish {} {
    global ns nf tr
    $ns flush-trace
    close $nf
    close $tr
    exec nam out.nam &
    exit 0
}

# Create 4 nodes
for {set i 0} {$i < 4} {incr i} {
    set n($i) [$ns node]
}

# Links
$ns duplex-link $n(0) $n(1) 10Mb 10ms DropTail
$ns duplex-link $n(1) $n(3) 10Mb 10ms DropTail
$ns duplex-link $n(2) $n(1) 10Mb 10ms DropTail

# Arrange nodes neatly in NAM
$ns duplex-link-op $n(0) $n(1) orient right-down
$ns duplex-link-op $n(1) $n(3) orient right
$ns duplex-link-op $n(2) $n(1) orient right-up

# TCP (n0 → n3)
set tcp [new Agent/TCP]
set sink [new Agent/TCPSink]
$ns attach-agent $n(0) $tcp
$ns attach-agent $n(3) $sink
$ns connect $tcp $sink
set ftp [new Application/FTP]
$ftp attach-agent $tcp

# UDP (n2 → n3)
set udp [new Agent/UDP]
set null [new Agent/Null]
$ns attach-agent $n(2) $udp
$ns attach-agent $n(3) $null
$ns connect $udp $null
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp

# Link failure/recovery + events
$ns rtmodel-at 1.0 down $n(1) $n(3)
$ns rtmodel-at 2.0 up $n(1) $n(3)
$ns rtproto DV
$ns at 0.1 "$ftp start"
$ns at 0.2 "$cbr start"
$ns at 5.0 "finish"

$ns run





EXP9B:

# Short TCP & UDP Simulation (Link State)
set ns [new Simulator]

# NAM & trace files
$ns namtrace-all [open out.nam w]
$ns trace-all [open out.tr w]

# Finish procedure
proc finish {} {
    global ns
    $ns flush-trace
    exec nam out.nam &
    exit 0
}

# Create nodes
for {set i 0} {$i < 4} {incr i} { set n($i) [$ns node] }

# Links
$ns duplex-link $n(0) $n(1) 10Mb 10ms DropTail
$ns duplex-link $n(1) $n(3) 10Mb 10ms DropTail
$ns duplex-link $n(2) $n(1) 10Mb 10ms DropTail

# Neat NAM layout
$ns duplex-link-op $n(0) $n(1) orient right-down
$ns duplex-link-op $n(2) $n(1) orient right-up
$ns duplex-link-op $n(1) $n(3) orient right

# TCP/FTP connection
set tcp [new Agent/TCP]
$ns attach-agent $n(0) $tcp
set sink [new Agent/TCPSink]
$ns attach-agent $n(3) $sink
$ns connect $tcp $sink

set ftp [new Application/FTP]
$ftp attach-agent $tcp

# UDP/CBR connection
set udp [new Agent/UDP]
$ns attach-agent $n(2) $udp
set null [new Agent/Null]
$ns attach-agent $n(3) $null
$ns connect $udp $null

set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp

# Link failure/recovery
$ns rtmodel-at 1.0 down $n(1) $n(3)
$ns rtmodel-at 2.0 up $n(1) $n(3)

# Routing protocol
$ns rtproto LS

# Start applications
$ns at 0.1 "$ftp start"
$ns at 0.2 "$cbr start"
$ns at 5.0 "finish"

# Run simulation
$ns run